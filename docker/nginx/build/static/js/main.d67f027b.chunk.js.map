{"version":3,"sources":["serviceWorker.js","constants/userConstants.js","reducers/authenticationReducer.js","reducers/index.js","reducers/usersReducer.js","helpers/store.js","helpers/history.js","services/authService.js","actions/userActions.js","containers/HomeContainer.js","containers/LoginContainer.js","containers/RegisterContainer.js","components/DynamicSelect.js","containers/UsersPanelContainer.js","containers/NotFound.js","App.js","helpers/utils.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","userConstants","user","JSON","parse","localStorage","getItem","initialState","loggedIn","rootReducer","combineReducers","authentication","action","type","loggingIn","users","loading","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","history","createBrowserHistory","login","username","password","requestOptions","method","headers","body","stringify","fetch","response","status","Error","json","setItem","role","ok","logout","removeItem","getAll","token","deleteUser","userId","userActions","dispatch","userService","resp","success","failure","HomeContainer","props","autobind","event","preventDefault","this","className","onClick","onLogout","Component","connect","LoginContainer","toRegister","setState","target","value","push","to","id","aria-describedby","placeholder","onChange","onUserNameChange","onPasswordChange","onLogin","RegisterContainer","toLogin","onUsernameChange","onRegister","DynamicSelect","handleChange","selectedValue","onSelectChange","options","arrayOfData","map","data","key","_id","UsersPanelContainer","handleSelectChange","onDelete","style","fontSize","NotFound","PublicRoute","component","rest","render","PrivateRoute","InternalRoute","jwtDecoder","App","path","exact","Home","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d67f027b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const userConstants = {\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n    \n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n};","import { userConstants } from '../constants';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user\n      };\n    case userConstants.LOGIN_FAILURE:\n      return {};\n    case userConstants.LOGOUT:\n      return {};\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\n\nimport { authentication } from './authenticationReducer.js';\nimport { users } from './usersReducer.js';\n\nconst rootReducer = combineReducers({\n  authentication,\n  users,\n});\n\nexport default rootReducer;\n","import { userConstants } from '../constants';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n    case userConstants.GETALL_SUCCESS:\n      return {\n        users: action.users\n      };\n    case userConstants.GETALL_FAILURE:\n      return { \n        error: action.error\n      };\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);","import { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory();","\n\nconst config = {\n    apiUrl: \"http://localhost:8080\"\n}\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`${config.apiUrl}/users/login`, requestOptions)\n        .then(response => {\n            if (response.status === 401) {\n                throw Error('Request was rejected with status' + 401);\n            }\n            return response.json()\n        })\n        .then(user => {\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        })\n}\n\nfunction register(username, password, role = 'internal') {\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({ username, password, role })\n    };\n\n    return fetch(`${config.apiUrl}/users/register`, requestOptions)\n        .then(response => {\n            if (!response.ok) {\n                throw Error('Request was rejected with status' + response.status);\n            }\n        })\n}\n\nfunction deleteUser(userId) {\n    const token = JSON.parse(localStorage.getItem('user')).token;\n    console.log(\"delet=>> \" + userId);\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'x-auth-token': token\n        }   \n    };\n\n    return fetch(`${config.apiUrl}/users/delete/` + userId, requestOptions)\n        .then(response => {\n            if (!response.ok) {\n                throw Error('Request was rejected with status' + response.status);\n            }\n        })\n}\n\nfunction logout() {\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const token = JSON.parse(localStorage.getItem('user')).token;\n\n    const requestOptions = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'x-auth-token': token\n        }\n    };\n\n    return fetch(`${config.apiUrl}/users/`, requestOptions)\n        .then(response => {\n            if (!response.ok) {\n                throw Error('Request was rejected with status' + response.status);\n            }\n            return response.json();\n        })\n}\n\n\nexport default {\n    login,\n    register,\n    logout,\n    getAll,\n    deleteUser\n}","import { userConstants } from '../constants';\nimport userService from '../services/authService';\n\nconst userActions = {\n    login,\n    logout,\n    getAll,\n    register,\n    deleteUser\n};\n\nexport default userActions;\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(resp => {\n                    dispatch(success(resp));\n            })\n            .catch(error => {\n                console.log(\"err login actions\");\n                dispatch(failure(error));\n            });\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction register(username, password, role = 'internal') {\n    return dispatch => {\n        userService.register(username, password, role)\n            .then(resp => {\n            })\n            .catch(error => {\n                console.log(\"error at register action\"+ error);\n            });\n    };\n\n}\n\nfunction deleteUser(userId) {\n    return dispatch => {\n        userService.deleteUser(userId)\n            .then(resp => {\n            })\n            .catch(error => {\n                console.log(\"error at delete user action\" + error);\n            });\n    };\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport userActions from '../actions/userActions';\nimport autobind from 'react-autobind';\n\n class HomeContainer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    autobind(this)\n\n  }\n\n  onLogout(event) {\n    event.preventDefault()\n    this.props.dispatch(userActions.logout());\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Home</h1>\n\n        <button type=\"submit\" className=\"btn-dark btn-lg btn-block\"\n          onClick={this.onLogout}> Log out\n        </button>\n      </div>\n    )\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {dispatch} = state\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps)(HomeContainer);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport autobind from 'react-autobind';\nimport { Redirect } from 'react-router';\n\nimport userActions from '../actions/userActions';\n\nclass LoginContainer extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            toRegister : false\n        }\n\n        autobind(this)\n    }\n\n    onUserNameChange(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    onPasswordChange(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    onLogin(event) {\n        event.preventDefault()\n        const { username, password } = this.state\n        this.props.dispatch(userActions.login(username, password));\n    }\n\n\n    render() {\n\n        if(this.props.loggedIn){  \n            return <Redirect push to=\"/\" />;\n        }\n\n        if(this.state.toRegister){  \n            return <Redirect push to=\"/register\" />;\n        }\n\n        const { username, password } = this.state\n        return (\n            <div>\n                <div id=\"login\">\n                    <div className=\"container\">\n                        <h1 className=\"text-center\">Login to your account</h1>\n                        <div className=\"login-form-container\">\n                            <hr />\n                            <form>\n                                <div className=\"form-group\">\n                                    <label>Username</label>\n                                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter username\" value={username}\n                                        onChange={this.onUserNameChange} />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Password</label>\n                                    <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={password}\n                                        onChange={this.onPasswordChange} />\n                                </div>\n\n                                <button type=\"submit\" className=\"btn-dark btn-lg btn-block\"\n                                    onClick={this.onLogin}>Login</button>\n\n                                <button type=\"submit\" className=\"btn-dark btn-lg btn-block\"\n                                    onClick={() =>  this.setState({toRegister: true})}>Register</button>    \n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    const { loggedIn } = state.authentication;\n    return {\n        loggedIn\n    };\n}\n\nexport default connect(mapStateToProps)(LoginContainer);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport userActions from '../actions/userActions';\nimport autobind from 'react-autobind';\n\nclass RegisterContainer extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            toLogin: false\n        }\n\n        autobind(this)\n    }\n\n    onUsernameChange(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    onPasswordChange(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    onRegister(event) {\n        event.preventDefault()\n\n        const { username, password } = this.state;\n\n        this.props.dispatch(userActions.register(username, password));\n        this.setState({toLogin: true});\n    }\n\n    render() {\n        const { username, password } = this.state\n\n        if(this.state.toLogin){ \n            return <Redirect push to=\"/login\" />;\n        }\n        \n        return (\n            <div id=\"login\">\n                <div className=\"container\">\n                    <h1 className=\"text-center\">Register</h1>\n                    <div className=\"login-form-container\">\n                        <hr />\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter username\" value={username}\n                                    onChange={this.onUsernameChange} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={password}\n                                    onChange={this.onPasswordChange} />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn-dark btn-lg btn-block\"\n                                onClick={this.onRegister}>Register</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { loggedIn } = state.authentication;\n    return {\n        loggedIn\n    };\n}\n\nexport default connect(mapStateToProps)(RegisterContainer);\n\n","import React, { Component } from 'react';\n\nclass DynamicSelect extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    handleChange = (event) => {\n        let selectedValue = event.target.value;\n        this.props.onSelectChange(selectedValue);\n    }\n\n    render() {\n        let arrayOfData = this.props.arrayOfData;\n        let options = arrayOfData.map((data) =>\n            <option\n                key={data._id}\n                value={data._id}\n            >\n                {data.username}\n            </option>\n        );\n\n        return (\n            <select className=\"browser-default custom-select\" onChange={this.handleChange}>\n                <option>Select Item</option>\n                {options}\n            </select>\n\n        )\n    }\n}\n\nexport default DynamicSelect;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport userActions from '../actions/userActions';\nimport autobind from 'react-autobind';\n\nimport DynamicSelect from \"../components/DynamicSelect\";\n\nclass UsersPanelContainer extends Component {\n\n  componentDidMount() {\n    this.props.dispatch(userActions.getAll());\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedValue: 'Nothing selected',\n      userId: null,\n      username: \"\",\n      password: \"\",\n    }\n    autobind(this)\n\n  }\n\n  handleSelectChange = (selectedValue) => {\n    this.setState({\n      selectedValue: selectedValue,\n      userId: selectedValue\n    });\n  }\n\n  onDelete = (event) => {\n    if (this.state.userId) {\n      this.props.dispatch(userActions.deleteUser(this.state.selectedValue));\n    }\n  }\n\n  onUsernameChange(event) {\n    this.setState({ username: event.target.value })\n  }\n\n  onPasswordChange(event) {\n    this.setState({ password: event.target.value })\n  }\n\n  onRegister(event) {\n    event.preventDefault()\n\n    const { username, password } = this.state;\n    this.props.dispatch(userActions.register(username, password, \"external\"));\n  }\n\n\n  onLogout(event) {\n    event.preventDefault()\n    this.props.dispatch(userActions.logout());\n  }\n\n  render() {\n    const users = this.props.users ? this.props.users.users : [];\n    const { username, password } = this.state;\n    return (\n      <div>\n        <h1>UserPanelContainer</h1>\n\n        <p style={{ fontSize: \"15\" }}>\n          <DynamicSelect arrayOfData={users} onSelectChange={this.handleSelectChange} /> <br /><br />\n          <div>\n            Selected value: {this.state.selectedValue}\n          </div>\n        </p>\n\n        <button type=\"submit\" className=\"btn-dark btn-lg btn-block\"\n          onClick={this.onDelete}> Delete Selected User\n        </button>\n\n        <div id=\"login\">\n          <div className=\"container\">\n            <h1 className=\"text-center\">Register External </h1>\n            <div className=\"login-form-container\">\n              <hr />\n              <form>\n                <div className=\"form-group\">\n                  <label>Username</label>\n                  <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter username\" value={username}\n                    onChange={this.onUsernameChange} />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={password}\n                    onChange={this.onPasswordChange} />\n                </div>\n\n                <button type=\"submit\" className=\"btn-dark btn-lg btn-block\"\n                  onClick={this.onRegister}>Register</button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n\n        <button type=\"submit\" className=\"btn-dark btn-lg btn-block\"\n            onClick={this.onLogout}> Log out\n        </button>\n\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { users: { users } } = state;\n  return {\n    users\n  };\n}\n\nexport default connect(mapStateToProps)(UsersPanelContainer);\n\n","import React, { Component } from 'react';\n\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Not Found</h1>\n      </div>\n    )\n  }\n\n}\n\n","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom'\nimport { Switch, Route, Redirect } from 'react-router'\n\nimport { history, isInternal } from './helpers';\n\nimport Home from \"./containers/HomeContainer.js\";\nimport LoginContainer from \"./containers/LoginContainer.js\";\nimport RegisterContainer from \"./containers/RegisterContainer\";\nimport UsersPanelContainer from \"./containers/UsersPanelContainer\";\nimport NotFound from \"./containers/NotFound\";\n\nconst PublicRoute = ({ component: Component, user, ...rest }) => (\n  <Route {...rest} render={props => (\n    <div>\n      <Component {...props} />\n    </div>\n  )} />\n)\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    localStorage.getItem('user')\n      ? <Component {...props} />\n      : <Redirect to=\"/login\" />\n  )} />\n)\n\nconst InternalRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    isInternal(JSON.parse(localStorage.getItem('user')).token)\n      ? <Component {...props} />\n      : <Redirect to=\"/login\" />\n  )} />\n)\n\nexport default class App extends Component {\n  render() {\n    return (\n      <HashRouter history={history}>\n        <div>\n          <Switch>\n            <PrivateRoute path='/' exact component={Home} />\n            <PublicRoute path='/login' exact component={LoginContainer} />\n            <PublicRoute path='/register' exact component={RegisterContainer} />\n            <InternalRoute path='/internal' exact component={UsersPanelContainer} />\n            <PublicRoute component={NotFound} /> \n          </Switch>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\n\n","import jwtDecoder from \"jwt-decode\";\n\nexport const isInternal = (token) => {\n    return jwtDecoder(token).role === 'internal' ? true : false\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { render } from 'react-dom';\nimport './index.css';\nimport  App  from './App';\nimport { store } from './helpers';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}